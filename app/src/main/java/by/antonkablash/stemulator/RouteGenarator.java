package by.antonkablash.stemulator;

import android.location.Location;
import com.google.android.gms.maps.model.LatLng;

import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import by.antonkablash.stemulator.model.Order;

/**
 * Created by Anton_Kablash on 6/26/2018.
 */
public class RouteGenarator {
    private static RouteGenarator mInstance;
    public int indexOfLocation = 0;
    //public static String[] points = "27.627530000000004,53.90757000000001;27.628280000000004,53.90757000000001;27.62826,53.908460000000005;27.628280000000004,53.908930000000005;27.628310000000003,53.909090000000006;27.63125,53.90823;27.63088,53.90782;27.63069,53.907650000000004;27.630290000000002,53.907430000000005;27.630190000000002,53.90739000000001;27.630100000000002,53.907340000000005;27.629920000000002,53.90719000000001;27.62986,53.90701000000001;27.629920000000002,53.90683000000001;27.630090000000003,53.906670000000005;27.63022,53.90663000000001;27.630360000000003,53.906600000000005;27.63071,53.906600000000005;27.631030000000003,53.90668;27.631280000000004,53.90682;27.63136,53.90691;27.631400000000003,53.90701000000001;27.631400000000003,53.90708000000001;27.631380000000004,53.907140000000005;27.631290000000003,53.90726000000001;27.631210000000003,53.907700000000006;27.631220000000003,53.90784000000001;27.63126,53.90793000000001;27.63136,53.90807;27.632330000000003,53.90919;27.633390000000002,53.91039000000001;27.633730000000003,53.91077000000001;27.634670000000003,53.911880000000004;27.635040000000004,53.912400000000005;27.63558,53.913340000000005;27.635880000000004,53.913990000000005;27.636100000000003,53.914680000000004;27.636170000000003,53.915060000000004;27.636370000000003,53.916740000000004;27.636450000000004,53.91760000000001;27.636570000000003,53.918330000000005;27.63669,53.91881000000001;27.6368,53.91915;27.637100000000004,53.919970000000006;27.63764,53.92134000000001;27.6385,53.923590000000004;27.63877,53.924310000000006;27.63933,53.925810000000006;27.639480000000002,53.92633000000001;27.639630000000004,53.92703;27.6397,53.927580000000006;27.639730000000004,53.92826;27.63971,53.92855;27.639630000000004,53.92913000000001;27.639480000000002,53.92974;27.63922,53.930420000000005;27.639350000000004,53.93074000000001;27.639440000000004,53.93081;27.63953,53.93086;27.642000000000003,53.93177000000001;27.642180000000003,53.931830000000005;27.64223,53.93188000000001;27.642260000000004,53.931920000000005;27.64347,53.93225;27.64579,53.932900000000004;27.646870000000003,53.93316;27.64739,53.93328;27.648380000000003,53.933550000000004;27.64908,53.93262000000001;27.649210000000004,53.93236;27.649310000000003,53.932030000000005;27.64936,53.9318;27.649330000000003,53.93164;27.64927,53.93153;27.649160000000002,53.931400000000004;27.6491,53.931270000000005;27.64908,53.93110000000001;27.649120000000003,53.930820000000004;27.649220000000003,53.93056000000001;27.64927,53.93043;27.649200000000004,53.930420000000005;27.649,53.93036000000001;27.64891,53.93039;27.648690000000002,53.930440000000004;27.648170000000004,53.9305;27.647740000000002,53.930510000000005;27.6472,53.93048;27.64656,53.93037;27.6461,53.93034;27.64572,53.93036000000001;27.645580000000002,53.93038000000001".split(";");
    private Order order;
    private Timer timer;

    private RouteGenarator() {
    }

    public static synchronized RouteGenarator getInstance() {
        if (mInstance == null) {
            mInstance = new RouteGenarator();
        }
        return mInstance;
    }

    public Order getOrder() {
        return order;
    }

    public void setOrder(Order order) {
        this.order = order;
    }

    public List<LatLng> getPoints() {
        if(order == null){
            return null;
        }
        return order.getPoints();
    }

    public void startRouteGenarating(){
        timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                RouteGenarator.getInstance().generateRoute();
            }
        }, 0, 5000);
    }

    public void endRouteGenarating(){
        if(timer != null) {
            timer.cancel();
        }
        RouteGenarator.getInstance().setIndexOfLocation(0);
    }


    public void generateRoute() {
        List<LatLng> points = getPoints();
        if(points != null) {
            if (indexOfLocation >= points.size()) {
                endRouteGenarating();

            } else {
                Location loc = new Location("GPS");
                LatLng point = points.get(indexOfLocation);
                loc.setLongitude(point.longitude);
                loc.setLatitude(point.latitude);
                MapManager.getInstance(null).showSpot(point);
                LocationUpdatesManager.getInstance(null).getGpsTracker().onLocationChanged(loc);
                indexOfLocation++;
            }
        }
    }

    public int getIndexOfLocation() {
        return indexOfLocation;
    }

    public void setIndexOfLocation(int indexOfLocation) {
        this.indexOfLocation = indexOfLocation;
    }
}
